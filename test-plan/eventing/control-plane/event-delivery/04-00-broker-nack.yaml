# Fails to receive and logs messages.
apiVersion: v1
kind: Pod
metadata:
  generateName: sink-3nack-
  namespace: conformance
  labels:
    app: conformance
    case: broker-nack
    component: sink-3nack
spec:
  containers:
  - name: sink-3nack
    image: gcr.io/knative-nightly/knative.dev/eventing/test/test_images/recordevents@sha256:9daab3dca38eabe00287512a430ef6c378d43ccab707ea7e240ea748c5ac32c5
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: SYSTEM_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: EVENT_GENERATORS
      value: receiver
    - name: EVENT_LOGS
      value: logger,recorder
    - name: REPLY
      value: "false"
      # Return NACK 3 first times. Combining this with a
      # subscription delivery that does not send retries will
      # result in a single NACK of the first request.
    - name: SKIP_ALGORITHM
      value: sequence
    - name: SKIP_COUNTER
      value: "3"

    ports:
    - containerPort: 8080

---

# Expose recordevents as a service
apiVersion: v1
kind: Service
metadata:
  name: sink-3nack
  namespace: conformance
  labels:
    app: conformance
    case: broker-nack
spec:
  selector:
    app: conformance
    case: broker-nack
    component: sink-3nack
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: broker-nack
  namespace: conformance
  labels:
    app: conformance
    case: broker-nack
spec:
  broker: conformance-broker
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: sink-3nack
  # Disable retries to make sure that failed events are
  # not retried.
  delivery:
    retry: 0
